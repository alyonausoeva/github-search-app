{
  "version": 3,
  "sources": ["../../@bem-react/classname/build/classname.development.js", "../../@bem-react/classname/index.js"],
  "sourcesContent": ["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\r\n * BEM className configure function.\r\n *\r\n * @example\r\n * ``` ts\r\n *\r\n * import { withNaming } from '@bem-react/classname';\r\n *\r\n * const cn = withNaming({ n: 'ns-', e: '__', m: '_' });\r\n *\r\n * cn('block', 'elem'); // 'ns-block__elem'\r\n * ```\r\n *\r\n * @param preset settings for the naming convention\r\n */\r\nfunction withNaming(preset) {\r\n    var nameSpace = preset.n || '';\r\n    var modValueDelimiter = preset.v || preset.m;\r\n    function stringify(b, e, m, mix) {\r\n        var entityName = e ? nameSpace + b + preset.e + e : nameSpace + b;\r\n        var className = entityName;\r\n        if (m) {\r\n            var modPrefix = ' ' + className + preset.m;\r\n            for (var k in m) {\r\n                if (m.hasOwnProperty(k)) {\r\n                    var modVal = m[k];\r\n                    if (modVal === true) {\r\n                        className += modPrefix + k;\r\n                    }\r\n                    else if (modVal) {\r\n                        className += modPrefix + k + modValueDelimiter + modVal;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (mix !== undefined) {\r\n            mix = Array.isArray(mix) ? mix : [mix];\r\n            for (var i = 0, len = mix.length; i < len; i++) {\r\n                var value = mix[i];\r\n                // Skipping non-string values and empty strings\r\n                if (!value || typeof value.valueOf() !== 'string')\r\n                    continue;\r\n                var mixes = value.valueOf().split(' ');\r\n                for (var j = 0; j < mixes.length; j++) {\r\n                    var val = mixes[j];\r\n                    if (val !== entityName) {\r\n                        className += ' ' + val;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return className;\r\n    }\r\n    return function cnGenerator(b, e) {\r\n        return function (elemOrMods, elemModsOrBlockMix, elemMix) {\r\n            if (typeof elemOrMods === 'string') {\r\n                if (typeof elemModsOrBlockMix === 'string' || Array.isArray(elemModsOrBlockMix)) {\r\n                    return stringify(b, elemOrMods, undefined, elemModsOrBlockMix);\r\n                }\r\n                return stringify(b, elemOrMods, elemModsOrBlockMix, elemMix);\r\n            }\r\n            return stringify(b, e, elemOrMods, elemModsOrBlockMix);\r\n        };\r\n    };\r\n}\r\n/**\r\n * BEM Entity className initializer with React naming preset.\r\n *\r\n * @example\r\n * ``` ts\r\n *\r\n * import { cn } from '@bem-react/classname';\r\n *\r\n * const cat = cn('Cat');\r\n *\r\n * cat(); // Cat\r\n * cat({ size: 'm' }); // Cat_size_m\r\n * cat('Tail'); // Cat-Tail\r\n * cat('Tail', { length: 'small' }); // Cat-Tail_length_small\r\n *\r\n * const dogPaw = cn('Dog', 'Paw');\r\n *\r\n * dogPaw(); // Dog-Paw\r\n * dogPaw({ color: 'black', exists: true }); // Dog-Paw_color_black Dog-Paw_exists\r\n * ```\r\n *\r\n * @see https://en.bem.info/methodology/naming-convention/#react-style\r\n */\r\nvar cn = withNaming({\r\n    e: '-',\r\n    m: '_',\r\n});\n\nexports.cn = cn;\nexports.withNaming = withNaming;\n", "'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./build/classname.production.min.js')\n} else {\n  module.exports = require('./build/classname.development.js')\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAiB5D,aAAS,WAAW,QAAQ;AACxB,UAAI,YAAY,OAAO,KAAK;AAC5B,UAAI,oBAAoB,OAAO,KAAK,OAAO;AAC3C,eAAS,UAAU,GAAG,GAAG,GAAG,KAAK;AAC7B,YAAI,aAAa,IAAI,YAAY,IAAI,OAAO,IAAI,IAAI,YAAY;AAChE,YAAI,YAAY;AAChB,YAAI,GAAG;AACH,cAAI,YAAY,MAAM,YAAY,OAAO;AACzC,mBAAS,KAAK,GAAG;AACb,gBAAI,EAAE,eAAe,CAAC,GAAG;AACrB,kBAAI,SAAS,EAAE,CAAC;AAChB,kBAAI,WAAW,MAAM;AACjB,6BAAa,YAAY;AAAA,cAC7B,WACS,QAAQ;AACb,6BAAa,YAAY,IAAI,oBAAoB;AAAA,cACrD;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AACA,YAAI,QAAQ,QAAW;AACnB,gBAAM,MAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,GAAG;AACrC,mBAAS,IAAI,GAAG,MAAM,IAAI,QAAQ,IAAI,KAAK,KAAK;AAC5C,gBAAI,QAAQ,IAAI,CAAC;AAEjB,gBAAI,CAAC,SAAS,OAAO,MAAM,QAAQ,MAAM;AACrC;AACJ,gBAAI,QAAQ,MAAM,QAAQ,EAAE,MAAM,GAAG;AACrC,qBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,kBAAI,MAAM,MAAM,CAAC;AACjB,kBAAI,QAAQ,YAAY;AACpB,6BAAa,MAAM;AAAA,cACvB;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AACA,aAAO,SAAS,YAAY,GAAG,GAAG;AAC9B,eAAO,SAAU,YAAY,oBAAoB,SAAS;AACtD,cAAI,OAAO,eAAe,UAAU;AAChC,gBAAI,OAAO,uBAAuB,YAAY,MAAM,QAAQ,kBAAkB,GAAG;AAC7E,qBAAO,UAAU,GAAG,YAAY,QAAW,kBAAkB;AAAA,YACjE;AACA,mBAAO,UAAU,GAAG,YAAY,oBAAoB,OAAO;AAAA,UAC/D;AACA,iBAAO,UAAU,GAAG,GAAG,YAAY,kBAAkB;AAAA,QACzD;AAAA,MACJ;AAAA,IACJ;AAwBA,QAAI,KAAK,WAAW;AAAA,MAChB,GAAG;AAAA,MACH,GAAG;AAAA,IACP,CAAC;AAED,YAAQ,KAAK;AACb,YAAQ,aAAa;AAAA;AAAA;;;AClGrB;AAAA;AAEA,QAAI,OAAuC;AACzC,aAAO,UAAU;AAAA,IACnB,OAAO;AACL,aAAO,UAAU;AAAA,IACnB;AAAA;AAAA;",
  "names": []
}
