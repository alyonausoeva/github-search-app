import {
  __commonJS
} from "./chunk-HYZYPRER.js";

// node_modules/@bem-react/classname/build/classname.development.js
var require_classname_development = __commonJS({
  "node_modules/@bem-react/classname/build/classname.development.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function withNaming(preset) {
      var nameSpace = preset.n || "";
      var modValueDelimiter = preset.v || preset.m;
      function stringify(b, e, m, mix) {
        var entityName = e ? nameSpace + b + preset.e + e : nameSpace + b;
        var className = entityName;
        if (m) {
          var modPrefix = " " + className + preset.m;
          for (var k in m) {
            if (m.hasOwnProperty(k)) {
              var modVal = m[k];
              if (modVal === true) {
                className += modPrefix + k;
              } else if (modVal) {
                className += modPrefix + k + modValueDelimiter + modVal;
              }
            }
          }
        }
        if (mix !== void 0) {
          mix = Array.isArray(mix) ? mix : [mix];
          for (var i = 0, len = mix.length; i < len; i++) {
            var value = mix[i];
            if (!value || typeof value.valueOf() !== "string")
              continue;
            var mixes = value.valueOf().split(" ");
            for (var j = 0; j < mixes.length; j++) {
              var val = mixes[j];
              if (val !== entityName) {
                className += " " + val;
              }
            }
          }
        }
        return className;
      }
      return function cnGenerator(b, e) {
        return function(elemOrMods, elemModsOrBlockMix, elemMix) {
          if (typeof elemOrMods === "string") {
            if (typeof elemModsOrBlockMix === "string" || Array.isArray(elemModsOrBlockMix)) {
              return stringify(b, elemOrMods, void 0, elemModsOrBlockMix);
            }
            return stringify(b, elemOrMods, elemModsOrBlockMix, elemMix);
          }
          return stringify(b, e, elemOrMods, elemModsOrBlockMix);
        };
      };
    }
    var cn = withNaming({
      e: "-",
      m: "_"
    });
    exports.cn = cn;
    exports.withNaming = withNaming;
  }
});

// node_modules/@bem-react/classname/index.js
var require_classname = __commonJS({
  "node_modules/@bem-react/classname/index.js"(exports, module) {
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_classname_development();
    }
  }
});
export default require_classname();
//# sourceMappingURL=@bem-react_classname.js.map
